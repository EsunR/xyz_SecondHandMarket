<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.ItemMapper" >
  <resultMap id="BaseResultMap" type="pojo.Item" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="oldPrice" property="oldprice" jdbcType="BIGINT" />
    <result column="conditions" property="conditions" jdbcType="VARCHAR" />
    <result column="sellerId" property="sellerid" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="sellerName" property="sellername" jdbcType="VARCHAR" />
    <result column="sellerContactWay" property="sellercontactway" jdbcType="INTEGER" />
    <result column="sellerContact" property="sellercontact" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, price, oldPrice, conditions, sellerId, description, sellerName, sellerContactWay, 
    sellerContact
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.ItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.ItemExample" >
    delete from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.Item" >
    insert into item (id, title, price, 
      oldPrice, conditions, sellerId, 
      description, sellerName, sellerContactWay, 
      sellerContact)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT}, 
      #{oldprice,jdbcType=BIGINT}, #{conditions,jdbcType=VARCHAR}, #{sellerid,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{sellername,jdbcType=VARCHAR}, #{sellercontactway,jdbcType=INTEGER}, 
      #{sellercontact,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="pojo.Item" >
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="oldprice != null" >
        oldPrice,
      </if>
      <if test="conditions != null" >
        conditions,
      </if>
      <if test="sellerid != null" >
        sellerId,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="sellername != null" >
        sellerName,
      </if>
      <if test="sellercontactway != null" >
        sellerContactWay,
      </if>
      <if test="sellercontact != null" >
        sellerContact,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="oldprice != null" >
        #{oldprice,jdbcType=BIGINT},
      </if>
      <if test="conditions != null" >
        #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null" >
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sellername != null" >
        #{sellername,jdbcType=VARCHAR},
      </if>
      <if test="sellercontactway != null" >
        #{sellercontactway,jdbcType=INTEGER},
      </if>
      <if test="sellercontact != null" >
        #{sellercontact,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.ItemExample" resultType="java.lang.Integer" >
    select count(*) from item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.oldprice != null" >
        oldPrice = #{record.oldprice,jdbcType=BIGINT},
      </if>
      <if test="record.conditions != null" >
        conditions = #{record.conditions,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerid != null" >
        sellerId = #{record.sellerid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sellername != null" >
        sellerName = #{record.sellername,jdbcType=VARCHAR},
      </if>
      <if test="record.sellercontactway != null" >
        sellerContactWay = #{record.sellercontactway,jdbcType=INTEGER},
      </if>
      <if test="record.sellercontact != null" >
        sellerContact = #{record.sellercontact,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update item
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=BIGINT},
      oldPrice = #{record.oldprice,jdbcType=BIGINT},
      conditions = #{record.conditions,jdbcType=VARCHAR},
      sellerId = #{record.sellerid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      sellerName = #{record.sellername,jdbcType=VARCHAR},
      sellerContactWay = #{record.sellercontactway,jdbcType=INTEGER},
      sellerContact = #{record.sellercontact,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.Item" >
    update item
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="oldprice != null" >
        oldPrice = #{oldprice,jdbcType=BIGINT},
      </if>
      <if test="conditions != null" >
        conditions = #{conditions,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null" >
        sellerId = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sellername != null" >
        sellerName = #{sellername,jdbcType=VARCHAR},
      </if>
      <if test="sellercontactway != null" >
        sellerContactWay = #{sellercontactway,jdbcType=INTEGER},
      </if>
      <if test="sellercontact != null" >
        sellerContact = #{sellercontact,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.Item" >
    update item
    set title = #{title,jdbcType=VARCHAR},
      price = #{price,jdbcType=BIGINT},
      oldPrice = #{oldprice,jdbcType=BIGINT},
      conditions = #{conditions,jdbcType=VARCHAR},
      sellerId = #{sellerid,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      sellerName = #{sellername,jdbcType=VARCHAR},
      sellerContactWay = #{sellercontactway,jdbcType=INTEGER},
      sellerContact = #{sellercontact,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>